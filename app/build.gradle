/*
 * Copyright 2015 Guillermo Orellana Ruiz
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'com.fernandocejas.frodo'
apply from: '../jacoco.gradle'
apply from: '../lint-summary.gradle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    compileOptions {
        sourceCompatibility rootProject.ext.javaSourceCompatibility
        targetCompatibility rootProject.ext.javaTargetCompatibility
    }

    defaultConfig {
        applicationId "es.guillermoorellana.travisforandroid"
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionName project.VERSION_NAME
        versionCode Integer.parseInt(project.VERSION_CODE)
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        // Common code for JVM tests lives in src/jvmTestsCommon.
        test.java.srcDir 'src/jvmTestsCommon/java'

        // Unit tests live in src/unitTest.
        test.java.srcDir 'src/unitTests/java'

        // Integration tests live in src/integrationTest.
        test.java.srcDir 'src/integrationTests/java'

        // Unit tests for debug build type specific code live in src/debugUnitTest.
        testDebug.java.srcDir 'src/debugUnitTests/java'

        // Unit tests for release build type specific code live in src/releaseUnitTest.
        testRelease.java.srcDir 'src/releaseUnitTests/java'

        // Functional tests live in src/functionalTests.
        androidTest.java.srcDir 'src/functionalTests/java'
    }

    lintOptions {
        abortOnError true // Fail early.

        disable 'GoogleAppIndexingWarning' // App does not have deep linking.
        disable 'InvalidPackage' // Okio references java.nio that does not presented in Android SDK.
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            exceptionFormat 'full'
        }
    }
}
dependencies {
    compile libraries.dagger
    apt libraries.daggerCompiler
    compile libraries.javaxInject
    compile libraries.javaxAnnotationApi

    compile libraries.rxJava
    compile libraries.rxAndroid
    compile libraries.rxBinding
    compile libraries.rxBindingV7

    compile libraries.okHttp
    compile libraries.okHttpLoggingInterceptor
    compile libraries.retrofit
    compile libraries.retrofitGsonConverter
    compile libraries.retrofitRxJavaAdapter
    compile libraries.moshi

    compile libraries.autoValue
    compile libraries.jodaTimeAndroid

    compile libraries.supportAnnotations
    compile libraries.supportAppCompat
    compile libraries.supportDesign
    compile libraries.supportRecyclerView
    compile libraries.supportCardView

    compile libraries.butterKnife
    compile libraries.picasso
    compile libraries.timber
    compile libraries.mosby
    compile libraries.mosbyViewstate
    compile libraries.fragmentargs
    apt libraries.fragmentargsProcessor

    apt libraries.dbflowProcessor
    compile libraries.dbflowCore
    compile libraries.dbflow

    provided libraries.jsr250
    provided libraries.lombok
    apt libraries.lombok

    // Developer tools (Developer Settings)
    debugCompile libraries.leakCanary
    releaseCompile libraries.leakCanaryNoOp
    testCompile libraries.leakCanaryNoOp

    debugCompile libraries.stetho
    debugCompile libraries.stethoOkHttp
    debugCompile libraries.tinyDancer

    testCompile libraries.junit
    testCompile libraries.robolectric
    testCompile libraries.assertJ
    testCompile libraries.equalsVerifier
    testCompile libraries.okHttpMockWebServer
    testCompile libraries.mockitoCore

    androidTestCompile libraries.supportTestRunner
    androidTestCompile libraries.supportTestRules
    androidTestCompile libraries.espressoCore
    androidTestCompile(libraries.espressoContrib) {
        // Causes IncompatibleClassChangeError. As alwaysâ€¦
        exclude module: 'support-annotations'
        exclude module: 'recyclerview-v7'
        exclude module: 'support-v4'
        exclude module: 'appcompat-v7'
        exclude module: 'design'
    }
    androidTestCompile libraries.okHttpMockWebServer
}

configurations.all {
    resolutionStrategy {
        // Force our version of support-annotations, we have a conflict between app and androidTest dependency resolution.
        force libraries.supportAnnotations
    }
}